{"version":3,"sources":["App.js","index.js"],"names":["MAPS","0","1","2","3","4","icons","Square","props","showImage","this","img","toString","className","value","id","isprev","iscurr","istip","onClick","src","process","alt","show","React","Component","e","createElement","Map","pattern","keyString","prev","curr","tip","tipItems","icon","split","includes","undefined","version","map","tiptool","i","rowsRendered","newRow","j","fetchKeyString","square","renderSquare","push","key","Tools","Game","createMap","sameValueMap","patternToSameValueMap","extendMap","getExtendMap","fillMapWithEmpty","goodPairs","calculateGoodPairs","state","history","level","inGame","prevSelection","currSelection","pos","slice","currentEntry","length","currPair","reversePair","newPattern","Object","assign","drawLine","newGoodPairs","keys","filter","setState","concat","tool","useTip","resetPattern","tipPair","currPattern","allValues","randomOrder","array","Math","floor","random","temp","shuffleArray","pop","newSameValueMap","newExtendMap","allPaths","console","log","c","document","getElementById","ctx","getContext","beginPath","lineWidth","strokeStyle","path","start","end","moveTo","getLocation","x","y","lineTo","stroke","setTimeout","clearRect","width","height","a","nextLevel","forceUpdate","handleClick","useTools","text","pageRender","maxPairs","emptyMap","total","numOfId","min","availableId","defaultPairsPerId","remainder","randomId","deconstruct","first","second","fourDirectionExtend","positions","connection","connectLine","parseInt","substring","indexOf","vertical","horizontal","availableDot","upper","goUp","lower","goDown","right","goRight","left","goLeft","join","currExtend","prevExtend","currFirst","currSec","prevFirst","prevSec","abs","currExFirst","currExSec","prevExFirst","prevExSec","ReactDOM","render"],"mappings":"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","file":"static/js/main.b3ef5319.chunk.js","sourcesContent":["import React, { Component, createElement } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Game from './index.js'\r\n\r\nexport const MAX_HEIGHT = 9;\r\nexport const MAX_WIDTH = 15;\r\nexport const ICON = ['boluo','caomei','juzi','liulian','mihoutao','sangshen','xigua','yezi','shanzha','pingguo','li','ningmeng','huolongguo','putao','lanmei'];\r\n\r\nexport const MAPS = {\r\n             0: [ '[2@1]', '[3@1]', '[4@1]', '[10@1]', '[11@1]', '[12@1]', '[3@2]', '[4@2]', '[5@2]', '[9@2]', '[10@2]', '[11@2]', '[1@3]', '[4@3]', '[5@3]', '[6@3]', '[8@3]', '[9@3]', '[10@3]', '[13@3]', '[1@4]', '[2@4]', '[5@4]', '[6@4]', '[7@4]', '[8@4]', '[9@4]', '[12@4]', '[13@4]', '[1@5]', '[2@5]', '[3@5]', '[7@5]', '[11@5]', '[12@5]', '[13@5]', '[2@6]', '[3@6]', '[4@6]', '[10@6]', '[11@6]', '[12@6]', ],\r\n             1: [ '[3@1]', '[5@1]', '[7@1]', '[9@1]', '[11@1]', '[13@1]', '[2@2]', '[4@2]', '[6@2]', '[8@2]', '[10@2]', '[12@2]', '[1@3]', '[3@3]', '[5@3]', '[7@3]', '[9@3]', '[11@3]', '[13@3]', '[2@4]', '[4@4]', '[6@4]', '[8@4]', '[10@4]', '[12@4]', '[1@5]', '[3@5]', '[5@5]', '[7@5]', '[9@5]', '[11@5]', '[13@5]', '[2@6]', '[4@6]', '[6@6]', '[8@6]', '[10@6]', '[12@6]', '[1@7]', '[3@7]', '[5@7]', '[7@7]', '[9@7]', '[11@7]', ] ,\r\n             2: ['[1@1]', '[3@1]', '[5@1]', '[7@1]', '[9@1]', '[11@1]', '[13@1]', '[1@2]', '[3@2]', '[5@2]', '[7@2]', '[9@2]', '[11@2]', '[13@2]', '[1@3]', '[3@3]', '[5@3]', '[9@3]', '[11@3]', '[13@3]', '[1@4]', '[3@4]', '[11@4]', '[13@4]', '[1@5]', '[3@5]', '[5@5]', '[9@5]', '[11@5]', '[13@5]', '[1@6]', '[3@6]', '[5@6]', '[7@6]', '[9@6]', '[11@6]', '[13@6]', '[1@7]', '[3@7]', '[5@7]', '[7@7]', '[9@7]', '[11@7]', '[13@7]', ],\r\n             3: ['[1@1]', '[3@1]', '[6@1]', '[8@1]', '[11@1]', '[13@1]', '[1@2]', '[3@2]', '[6@2]', '[8@2]', '[11@2]', '[13@2]', '[1@3]', '[3@3]', '[6@3]', '[8@3]', '[11@3]', '[13@3]', '[1@4]', '[2@4]', '[3@4]', '[6@4]', '[8@4]', '[11@4]', '[12@4]', '[13@4]', '[1@5]', '[3@5]', '[6@5]', '[8@5]', '[11@5]', '[13@5]', '[1@6]', '[3@6]', '[6@6]', '[8@6]', '[11@6]', '[13@6]', '[1@7]', '[3@7]', '[6@7]', '[8@7]', '[11@7]', '[13@7]'],\r\n             4: ['[1@1]', '[2@1]', '[3@1]', '[11@1]', '[12@1]', '[13@1]', '[2@2]', '[3@2]', '[4@2]', '[10@2]', '[11@2]', '[12@2]', '[3@3]', '[4@3]', '[5@3]', '[9@3]', '[10@3]', '[11@3]', '[4@4]', '[5@4]', '[6@4]', '[7@4]', '[8@4]', '[9@4]', '[10@4]', '[3@5]', '[4@5]', '[5@5]', '[9@5]', '[10@5]', '[11@5]', '[2@6]', '[3@6]', '[4@6]', '[10@6]', '[11@6]', '[12@6]', '[1@7]', '[2@7]', '[3@7]', '[10@7]', '[11@7]', '[12@7]', '[13@7]',             ],\r\n\r\n            };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App.js'\r\nimport { MAX_HEIGHT, MAX_WIDTH, ICON,  MAPS}  from './App.js'\r\n\r\nconst height = MAX_HEIGHT;\r\nconst width = MAX_WIDTH;\r\nconst icons = ICON;\r\nlet appPage = 'start';\r\n\r\nclass Square extends React.Component {\r\n  \r\n  render(props){\r\n    const showImage = (this.props.img !== 'undefined.png').toString();\r\n    return (\r\n      \r\n      <button className='square'\r\n      value = {this.props.value}\r\n      id = {this.props.id}\r\n      isprev = {this.props.isprev}\r\n      iscurr = {this.props.iscurr}\r\n      img = {this.props.img}\r\n      istip = {this.props.istip}\r\n      onClick={ () => this.props.onClick()}\r\n      >\r\n        <img className = 'icon' \r\n        src={`${process.env.PUBLIC_URL}/assets/img/${this.props.img}`} alt={this.props.value} show= {showImage}\r\n        />\r\n      </button>)\r\n  }\r\n}\r\n\r\nconst e = React.createElement;\r\n\r\nclass Map extends React.Component {\r\n\r\n  renderSquare(pattern, keyString, prev, curr, tip){\r\n    const icon = icons[pattern[keyString]] + '.png';\r\n    let tipItems;\r\n    if (tip !== 'null' && tip !== null){\r\n      tipItems = tip.split('&');\r\n    }\r\n    if (tipItems && (tipItems.includes(keyString))){\r\n      return (\r\n        <Square\r\n          className = 'square'\r\n          value = {pattern[keyString]} \r\n          id = {keyString}\r\n          key = {keyString}\r\n          onClick = {() => this.props.onClick(keyString)}\r\n          isprev = {(keyString === prev && prev !== null && prev !== undefined).toString()}\r\n          iscurr = {(keyString === curr && curr !== null && curr !== undefined).toString()}\r\n          istip = 'true'\r\n          img = {icon}\r\n        >\r\n        </Square>\r\n      );\r\n    } else {\r\n      return (\r\n        <Square\r\n          className = 'square'\r\n          value = {pattern[keyString]} \r\n          id = {keyString}\r\n          key = {keyString}\r\n          onClick = {() => this.props.onClick(keyString)}\r\n          isprev = {(keyString === prev && prev !== null && prev !== undefined).toString()}\r\n          iscurr = {(keyString === curr && curr !== null && curr !== undefined).toString()}\r\n          istip = 'false'\r\n          img = {icon}\r\n        >\r\n        </Square>\r\n      );\r\n    }\r\n    \r\n  }\r\n\r\n  render(props){\r\n    const pattern = this.props.version.map;\r\n    const prev = this.props.prev;\r\n    const curr = this.props.curr;\r\n    const tip = this.props.tiptool;\r\n    let i = 0;\r\n    let rowsRendered = [];\r\n    while (i<height){\r\n      let newRow = [];\r\n      let j = 0;\r\n      while (j<width){\r\n        let pos = [j,i];\r\n        let keyString = fetchKeyString(pos);\r\n        pattern[keyString] = (keyString in pattern)? pattern[keyString] : 'null';\r\n\r\n        let square = this.renderSquare(pattern, keyString, prev, curr, tip);\r\n        newRow.push(square);\r\n        j++;\r\n      }\r\n      rowsRendered.push(e('div', {className: 'board-row', key:`${i}`} , newRow));\r\n      i++;\r\n    }\r\n    return e('div', {className: 'board-container'}, rowsRendered);\r\n  }\r\n}\r\n\r\nconst emptyMap = ['[5@1]', '[7@1]', '[9@1]', '[11@1]', '[13@1]', '[2@2]', '[4@2]', '[6@2]', '[8@2]', '[10@2]', '[12@2]', '[1@3]', '[3@3]', '[5@3]', '[7@3]', '[9@3]', '[11@3]', '[13@3]', '[2@4]', '[4@4]', '[6@4]', '[8@4]', '[10@4]', '[12@4]', '[1@5]', '[3@5]', '[5@5]', '[7@5]', '[9@5]', '[11@5]', '[13@5]', '[2@6]', '[4@6]', '[6@6]', '[8@6]', '[10@6]', '[12@6]', '[1@7]', '[3@7]', '[5@7]', '[7@7]', '[9@7]', '[11@7]', '[13@7]', ];\r\n\r\n\r\n\r\nclass Tools extends React.Component {\r\n  render(props){\r\n    return (\r\n      <div className='toolbar'>\r\n        <button className='tool'>\r\n        TIP\r\n          <img src={`${process.env.PUBLIC_URL}/assets/tools/bulb.png`} \r\n          alt='tip' onClick={() => this.props.onClick('tip')}></img>\r\n          \r\n        </button>\r\n        <button className='tool'>\r\n        RESET\r\n         <img src={`${process.env.PUBLIC_URL}/assets/tools/reset.png`} \r\n         alt='reset' onClick={() => this.props.onClick('reset')}></img>\r\n        </button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    const emptyMap = MAPS[0];\r\n    const pattern = createMap(emptyMap);\r\n    const sameValueMap = patternToSameValueMap(pattern);\r\n    const mapWithEmpty = fillMapWithEmpty(pattern, width, height);\r\n    const extendMap = getExtendMap(mapWithEmpty);\r\n    const goodPairs = calculateGoodPairs(extendMap, sameValueMap);\r\n    this.state = {\r\n      history : [\r\n        {\r\n          map: pattern, //postion [x,y]  => id\r\n          sameValueMap: sameValueMap,\r\n          extendMap: extendMap,\r\n          goodPairs : goodPairs, //[start, end] => [start, path, path, path, end]  (all positions)\r\n        },\r\n      ],\r\n      level : 0,\r\n      inGame : false,\r\n      prevSelection: null,\r\n      currSelection: null,\r\n      tiptool: null,\r\n  }\r\n}\r\n\r\n  handleClick(pos){\r\n    const history = this.state.history.slice();\r\n    const currentEntry = history[history.length - 1];\r\n    const pattern = currentEntry.map;\r\n    const goodPairs = currentEntry.goodPairs;  \r\n    //check whether there is a valid pair selected\r\n    const curr = pos;\r\n    const prev = this.state.currSelection;\r\n    \r\n    //not a valid click area\r\n    if (pattern[pos]==='null') {\r\n      return;}\r\n    //valid click\r\n    if (pos!== prev){\r\n      const currPair = curr + '&' + prev;\r\n      const reversePair = prev + '&' +  curr;\r\n      if (!(currPair in goodPairs || reversePair in goodPairs)){\r\n        //not paired\r\n        this.setState(\r\n          {prevSelection: this.state.currSelection,\r\n           currSelection: pos,\r\n          tiptool: null});\r\n      } else{\r\n        //patterns paired\r\n        let newPattern = Object.assign({}, pattern);\r\n        //update pattern\r\n        newPattern[prev] = 'null';\r\n        newPattern[curr] = 'null';\r\n        if (currPair in goodPairs){this.drawLine(goodPairs[currPair]);}\r\n        else if (reversePair in goodPairs) {this.drawLine(goodPairs[reversePair]);}\r\n        const sameValueMap = patternToSameValueMap(newPattern);\r\n        const mapWithEmpty = fillMapWithEmpty(newPattern, width, height);\r\n        const extendMap = getExtendMap(mapWithEmpty);\r\n        const newGoodPairs = calculateGoodPairs(extendMap, sameValueMap);\r\n        const withValue = Object.keys(newPattern).filter(pos => newPattern[pos]!=='null');\r\n        this.setState({\r\n          history : history.concat([\r\n            {map: newPattern, sameValueMap: sameValueMap, goodPairs: newGoodPairs, extendMap: extendMap}\r\n          ]),\r\n          currSelection : null,\r\n          prevSelection : null,\r\n          tiptool: null,\r\n        });\r\n      } \r\n    }\r\n  }\r\n    \r\n  useTools(tool){\r\n    if (tool === 'tip'){\r\n      //show a tip\r\n      this.useTip();\r\n    } else {\r\n      //reset pattern\r\n      this.resetPattern();\r\n    }\r\n  }\r\n\r\n  useTip(){\r\n    const history = this.state.history.slice();\r\n    const currentEntry = history[history.length - 1];\r\n    const goodPairs = currentEntry.goodPairs;\r\n    const tipPair = Object.keys(goodPairs)[0];\r\n    this.setState({tiptool: tipPair,})\r\n    this.drawLine(goodPairs[tipPair]);\r\n  }\r\n\r\n  resetPattern(){\r\n    const history = this.state.history.slice();\r\n    const currentEntry = history[history.length - 1];\r\n    const currPattern = currentEntry.map;\r\n    const newPattern = {};\r\n    const sameValueMap = currentEntry.sameValueMap;\r\n    //get all current values\r\n    let allValues = [];\r\n    for (var key in sameValueMap){\r\n      for (var i=0; i<sameValueMap[key].length; i++)\r\n      allValues.push(key);\r\n    }\r\n    let randomOrder = shuffleArray(allValues);\r\n    for (var pos in currPattern){\r\n      newPattern[pos] = (currPattern[pos] === 'null')? 'null' : randomOrder.pop();\r\n    }\r\n    const newSameValueMap = patternToSameValueMap(newPattern);\r\n    const newExtendMap = getExtendMap(newPattern);\r\n    const newGoodPairs = calculateGoodPairs(newExtendMap, newSameValueMap);\r\n    this.setState({\r\n      history : history.concat([{\r\n        map: newPattern, sameValueMap: newSameValueMap, extendMap: newExtendMap, goodPairs: newGoodPairs,\r\n      }]),\r\n      prevSelection: null,\r\n      currSelection: null,\r\n      tiptool: null\r\n    })\r\n  }\r\n\r\n  drawLine(allPaths){\r\n    console.log(allPaths);\r\n    const c = document.getElementById('canvas');\r\n    const ctx = c.getContext(\"2d\");\r\n    ctx.beginPath();\r\n    ctx.lineWidth = \"2\";\r\n    ctx.strokeStyle = \"#e7eaf9\";\r\n    let path = allPaths.split('->');\r\n    for (var i=0; i< path.length - 1; i++){\r\n      const start = path[i];\r\n      const end = path[i+1];\r\n      ctx.moveTo(getLocation(start).x,getLocation(start).y);\r\n      ctx.lineTo(getLocation(end).x,getLocation(end).y);\r\n    }\r\n    ctx.stroke();\r\n    setTimeout(() => { ctx.clearRect(0, 0, c.width, c.height);; }, 300);\r\n  }\r\n\r\n  async componentDidUpdate() {\r\n    console.log('component updated!');\r\n    const history = this.state.history.slice();\r\n    const currentEntry = history[history.length - 1];\r\n    const newPattern = currentEntry.map;\r\n    const withValue = Object.keys(newPattern).filter(pos => newPattern[pos]!=='null');\r\n    if (withValue.length === 0)\r\n    { this.nextLevel();}\r\n  }\r\n\r\n  nextLevel(){\r\n    const nextLevel = (this.state.level < Object.keys(MAPS).length - 1)? this.state.level + 1 : 0;\r\n    console.log(nextLevel);\r\n    const emptyMap = MAPS[nextLevel];\r\n    const pattern = createMap(emptyMap);\r\n    const sameValueMap = patternToSameValueMap(pattern);\r\n    const mapWithEmpty = fillMapWithEmpty(pattern, width, height);\r\n    const extendMap = getExtendMap(mapWithEmpty);\r\n    const goodPairs = calculateGoodPairs(extendMap, sameValueMap);\r\n    this.setState({\r\n      history: \r\n        this.state.history.concat([{\r\n          map: pattern, sameValueMap: sameValueMap, extendMap: extendMap, goodPairs: goodPairs,\r\n        }]),\r\n        inGame: false,\r\n        level: nextLevel,\r\n        prevSelection: null,\r\n        currSelection: null,\r\n        tiptool: null,\r\n      });\r\n      this.forceUpdate();\r\n  }\r\n\r\n  render(props){\r\n    const history = this.state.history.slice();\r\n    const currentEntry = history[history.length - 1];\r\n\r\n    const pageRender = () => {\r\n      if (this.state.inGame){\r\n        return (\r\n          <div className='game'>\r\n            <Map version={currentEntry}\r\n            onClick = {(pos) => this.handleClick(pos)}\r\n            prev = {this.state.prevSelection}\r\n            curr = {this.state.currSelection}\r\n            tiptool = {this.state.tiptool}>\r\n            </Map>\r\n            <Tools\r\n            onClick = {(tool) => this.useTools(tool)}>\r\n            </Tools>\r\n          </div> \r\n        );\r\n      } else {\r\n        const start = (this.state.history.length === 1) ? 'start' : 'restart';\r\n        const text = (this.state.level === 0)? start : 'next';\r\n        return (\r\n          <button className='start' onClick={() => this.setState({inGame: true})}>{text}</button>\r\n        );\r\n      }\r\n    }\r\n    \r\n    return (\r\n      <div className='all'>\r\n          <h1 className='Title'> Connect 2 </h1>\r\n          <p className='level-indicator'> Level {this.state.level} </p>\r\n          <div className = 'board'>\r\n             {pageRender()}\r\n          </div>\r\n          <canvas id='canvas' height='325' width='650'></canvas>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst maxPairs = icons.length;\r\n\r\nfunction createMap(emptyMap){\r\n  let total = emptyMap.length;\r\n  let numOfId = Math.min(total/2, maxPairs);\r\n  let map = {};\r\n  let availableId = {};\r\n  let defaultPairsPerId = Math.floor((total/2)/numOfId);\r\n  let remainder = (total % numOfId) / 2;\r\n  for (var j=0; j <numOfId; j++){\r\n    availableId[j] = (remainder > 0)? (defaultPairsPerId+1)*2: defaultPairsPerId*2;\r\n    remainder--;\r\n  }\r\n\r\n  for (var i = 0; i < total; i++){\r\n    let keyString = emptyMap[i];\r\n    let randomId = Math.floor(Math.random()*numOfId);\r\n    while ((keyString in map) || availableId[randomId] === 0) {\r\n      randomId = Math.floor(Math.random()*numOfId);\r\n    }\r\n    map[keyString] = randomId;\r\n    availableId[randomId]--;\r\n  }\r\n  return map; \r\n}\r\n\r\nfunction patternToSameValueMap(pattern){\r\n  let sameValueMap = {};\r\n  for (var pos in pattern){\r\n    let value = pattern[pos];\r\n    if (value === 'null') continue;\r\n    sameValueMap[value] = (!sameValueMap[value])? [pos] : sameValueMap[value].concat([pos]);\r\n  }\r\n  return sameValueMap;\r\n}\r\n\r\nfunction getLocation(keyString){\r\n  const x = deconstruct(keyString).first*35 + 117 -35;\r\n  const y = deconstruct(keyString).second*35 + 62 - 35;\r\n  return {x: x, y: y};\r\n}\r\n\r\nfunction fillMapWithEmpty(pattern, width, height){\r\n  let newPattern = {};\r\n  var i = 0;\r\n  while (i < height){\r\n      var j = 0;\r\n      while (j < width){\r\n        let pos = [j,i];\r\n        let keyString = fetchKeyString(pos);\r\n        newPattern[keyString] = (keyString in pattern)? pattern[keyString] : 'null';\r\n        j++;\r\n      }\r\n      i++;\r\n    }\r\n    return newPattern;\r\n}\r\n\r\n/* Randomize array in-place using Durstenfeld shuffle algorithm */\r\nfunction shuffleArray(array) {\r\n  for (var i = array.length - 1; i > 0; i--) {\r\n      var j = Math.floor(Math.random() * (i + 1));\r\n      var temp = array[i];\r\n      array[i] = array[j];\r\n      array[j] = temp;\r\n  }\r\n  return array;\r\n}\r\n\r\nfunction getExtendMap(pattern){\r\n  let extendMap = {};\r\n  for (var keyString in pattern){\r\n    extendMap[keyString] = fourDirectionExtend(pattern, keyString);\r\n  }\r\n  return extendMap;\r\n}\r\n\r\nfunction calculateGoodPairs(extendMap, sameValueMap){\r\n  let goodPairs = {};\r\n  for (var key in sameValueMap){\r\n    let positions = sameValueMap[key];\r\n    for (var i=0; i< positions.length; i++){\r\n      for (var j = 0; j < positions.length; j++){\r\n        if (i !== j) {\r\n          let connection = connectLine(positions[i], positions[j], extendMap);\r\n          if (connection !== undefined && connection !== null){\r\n            if (!(positions[j]+'&'+positions[i] in goodPairs)){\r\n            goodPairs[positions[i]+'&'+positions[j]] = connection;}\r\n          }}}} }\r\n  return goodPairs;\r\n}\r\n\r\nfunction fetchKeyString(pos){\r\n  let firstEle = pos[0];\r\n  let secEle = pos[1];\r\n  return '[' + firstEle + '@' + secEle + ']';\r\n}\r\n\r\nfunction deconstruct(keyString){\r\n  return ({ first: parseInt(keyString.substring(keyString.indexOf('[') + 1, keyString.indexOf('@'))),\r\n          second : parseInt(keyString.substring(keyString.indexOf('@') + 1, keyString.indexOf(']')))})\r\n}\r\n\r\nfunction fourDirectionExtend(map, keyString){\r\n  const vertical = deconstruct(keyString).second;\r\n  const horizontal = deconstruct(keyString).first;\r\n  let availableDot = [];\r\n  //Go up\r\n  let upper = vertical - 1;\r\n  while (upper >= 0){\r\n    let goUp = fetchKeyString([horizontal, upper]);\r\n    if (map[goUp] === 'null'){\r\n      availableDot.push((goUp));\r\n      upper--;\r\n    } else {break;}\r\n  }\r\n\r\n  //Go down\r\n  let lower = vertical + 1;\r\n  while (lower < height){\r\n    let goDown = fetchKeyString([horizontal, lower]);\r\n    if (map[goDown] === 'null'){\r\n      availableDot.push((goDown));\r\n      lower++;\r\n    } else {break;}\r\n  }\r\n\r\n  //Go right\r\n  let right = horizontal + 1;\r\n  while (right <= width){\r\n    let goRight = fetchKeyString([right, vertical]);\r\n    if (map[goRight] === 'null'){\r\n      availableDot.push((goRight));\r\n      right++;\r\n    } else {break;}\r\n  }\r\n\r\n  //Go left\r\n  let left = horizontal - 1;\r\n  while (left >= 0){\r\n    let goLeft = fetchKeyString([left, vertical]);\r\n    if (map[goLeft] === 'null'){\r\n      availableDot.push((goLeft));\r\n      left--;\r\n    } else {break;}\r\n  }\r\n\r\n  return availableDot.join('->');\r\n}\r\n\r\nfunction connectLine(curr, prev, extendMap){\r\n  const currExtend = extendMap[curr].split('->');\r\n  const prevExtend = extendMap[prev].split('->');\r\n  const currFirst = deconstruct(curr).first;\r\n  const currSec = deconstruct(curr).second;\r\n  const prevFirst = deconstruct(prev).first;\r\n  const prevSec = deconstruct(prev).second;\r\n  if (currFirst === prevFirst && (Math.abs(currSec - prevSec) === 1)){\r\n    return [curr, prev].join('->');\r\n  }\r\n  if (currSec === prevSec && (Math.abs(currFirst - prevFirst) === 1)){\r\n    return [curr, prev].join('->');\r\n  }\r\n  if (!currExtend) return null;\r\n  if (!prevExtend) return null;\r\n\r\n  for (var i=0; i<currExtend.length; i++){\r\n    for (var j=0; j<prevExtend.length; j++){\r\n      if (currExtend[i]  === prevExtend[j]){\r\n        return [curr, currExtend[i], prev].join('->');\r\n      }\r\n    }\r\n  }   \r\n\r\n  for (var i=0; i<currExtend.length; i++){\r\n    for (var j=0; j<prevExtend.length; j++){\r\n      const currExFirst = deconstruct(currExtend[i]).first;\r\n      const currExSec = deconstruct(currExtend[i]).second;\r\n      const prevExFirst = deconstruct(prevExtend[j]).first;\r\n      const prevExSec = deconstruct(prevExtend[j]).second;\r\n          if ((currExFirst === prevExFirst) && (extendMap[prevExtend[j]].includes(currExtend[i]))) {\r\n            return [curr, currExtend[i], prevExtend[j], prev].join('->');\r\n          } if ((currExSec === prevExSec) && (extendMap[prevExtend[j]].includes(currExtend[i]))){\r\n            return [curr, currExtend[i], prevExtend[j], prev].join('->');\r\n          }\r\n        }\r\n    }\r\n  return null;\r\n}\r\n\r\nexport default Game;\r\n\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}